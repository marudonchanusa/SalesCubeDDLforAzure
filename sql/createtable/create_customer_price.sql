CREATE TABLE IF NOT EXISTS CUSTOMER_RETAIL_PRICE_XXXXX
(
  CUSTOMER_RETAIL_PRICE_ID INT(10),
  APPLY_DATE   DATE,
  CUSTOMER_CODE  VARCHAR(15)   ,
  PRODUCT_CODE  VARCHAR(20)   NOT NULL,
  RETAIL_PRICE  DECIMAL(12,3)   ,
  CRE_FUNC  VARCHAR(255)   ,
  CRE_DATETM  DATETIME   ,
  CRE_USER  VARCHAR(30)   ,
  UPD_FUNC  VARCHAR(255)   ,
  UPD_DATETM  DATETIME   ,
  UPD_USER  VARCHAR(30)   ,
  DEL_FUNC  VARCHAR(255)   ,
  DEL_DATETM  DATETIME   ,
  DEL_USER  VARCHAR(30)   ,
  PRIMARY KEY (
    CUSTOMER_RETAIL_PRICE_ID
  )
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS CUSTOMER_RETAIL_PRICE_HIST_XXXXX
(
  HIST_ID  INT UNSIGNED   ,
  ACTION_TYPE  VARCHAR(20)   ,
  ACTION_FUNC  VARCHAR(255)   ,
  REC_DATETM  DATETIME   ,
  REC_USER  VARCHAR(30)   ,
  CUSTOMER_RETAIL_PRICE_ID INT(10),
  APPLY_DATE   DATE,
  CUSTOMER_CODE  VARCHAR(15)   ,
  PRODUCT_CODE  VARCHAR(20)   NOT NULL,
  RETAIL_PRICE  DECIMAL(12,3)   ,
  CRE_FUNC  VARCHAR(255)   ,
  CRE_DATETM  DATETIME   ,
  CRE_USER  VARCHAR(30)   ,
  UPD_FUNC  VARCHAR(255)   ,
  UPD_DATETM  DATETIME   ,
  UPD_USER  VARCHAR(30)   ,
  DEL_FUNC  VARCHAR(255)   ,
  DEL_DATETM  DATETIME   ,
  DEL_USER  VARCHAR(30)   ,
  PRIMARY KEY (
    HIST_ID
  )
) ENGINE=INNODB;

DELIMITER //
SELECT 'CUSTOMER_RETAIL_PRICE_XXXXX'//
CREATE TRIGGER CUSTOMER_RETAIL_PRICE_XXXXX_INS AFTER INSERT ON CUSTOMER_RETAIL_PRICE_XXXXX FOR EACH ROW BEGIN
DECLARE histId INT UNSIGNED DEFAULT 0;
IF NEW.CRE_USER IS NULL OR NEW.CRE_USER <> 'NOLOG' THEN
SET histId = GET_NEXT_VAL_HIST('CUSTOMER_RETAIL_PRICE');

INSERT INTO CUSTOMER_RETAIL_PRICE_HIST_XXXXX(HIST_ID,ACTION_TYPE,ACTION_FUNC,REC_DATETM,REC_USER,CUSTOMER_RETAIL_PRICE_ID,APPLY_DATE,CUSTOMER_CODE,PRODUCT_CODE,RETAIL_PRICE,CRE_FUNC,CRE_DATETM,CRE_USER,UPD_FUNC,UPD_DATETM,UPD_USER,DEL_FUNC,DEL_DATETM,DEL_USER) VALUES ( histId, 'INSERT', NEW.CRE_FUNC, now(), NEW.CRE_USER, NEW.CUSTOMER_RETAIL_PRICE_ID, NEW.APPLY_DATE, NEW.CUSTOMER_CODE, NEW.PRODUCT_CODE, NEW.RETAIL_PRICE, NEW.CRE_FUNC, NEW.CRE_DATETM, NEW.CRE_USER, NEW.UPD_FUNC, NEW.UPD_DATETM, NEW.UPD_USER, NEW.DEL_FUNC, NEW.DEL_DATETM, NEW.DEL_USER);
END IF;

END//

CREATE TRIGGER CUSTOMER_RETAIL_PRICE_XXXXX_UPD AFTER UPDATE ON CUSTOMER_RETAIL_PRICE_XXXXX FOR EACH ROW BEGIN
DECLARE histId INT UNSIGNED DEFAULT 0;
IF NEW.UPD_USER IS NULL OR NEW.UPD_USER <> 'NOLOG' THEN
SET histId = GET_NEXT_VAL_HIST('CUSTOMER_RETAIL_PRICE');

INSERT INTO CUSTOMER_RETAIL_PRICE_HIST_XXXXX(HIST_ID,ACTION_TYPE,ACTION_FUNC,REC_DATETM,REC_USER,CUSTOMER_RETAIL_PRICE_ID,APPLY_DATE,CUSTOMER_CODE,PRODUCT_CODE,RETAIL_PRICE,CRE_FUNC,CRE_DATETM,CRE_USER,UPD_FUNC,UPD_DATETM,UPD_USER,DEL_FUNC,DEL_DATETM,DEL_USER) VALUES ( histId, 'UPDATE', NEW.CRE_FUNC, now(), NEW.CRE_USER, NEW.CUSTOMER_RETAIL_PRICE_ID, NEW.APPLY_DATE, NEW.CUSTOMER_CODE, NEW.PRODUCT_CODE, NEW.RETAIL_PRICE, NEW.CRE_FUNC, NEW.CRE_DATETM, NEW.CRE_USER, NEW.UPD_FUNC, NEW.UPD_DATETM, NEW.UPD_USER, NEW.DEL_FUNC, NEW.DEL_DATETM, NEW.DEL_USER);
END IF;

END//

CREATE TRIGGER CUSTOMER_RETAIL_PRICE_XXXXX_DEL AFTER DELETE ON CUSTOMER_RETAIL_PRICE_XXXXX FOR EACH ROW BEGIN
DECLARE histId INT UNSIGNED DEFAULT 0;
IF OLD.DEL_USER IS NULL OR OLD.DEL_USER <> 'NOLOG' THEN
SET histId = GET_NEXT_VAL_HIST('CUSTOMER_RETAIL_PRICE');

INSERT INTO CUSTOMER_RETAIL_PRICE_HIST_XXXXX(HIST_ID,ACTION_TYPE,ACTION_FUNC,REC_DATETM,REC_USER,CUSTOMER_RETAIL_PRICE_ID,APPLY_DATE,CUSTOMER_CODE,PRODUCT_CODE,RETAIL_PRICE,CRE_FUNC,CRE_DATETM,CRE_USER,UPD_FUNC,UPD_DATETM,UPD_USER,DEL_FUNC,DEL_DATETM,DEL_USER) VALUES ( histId, 'DELETE', OLD.CRE_FUNC, now(), OLD.CRE_USER, OLD.CUSTOMER_RETAIL_PRICE_ID, OLD.APPLY_DATE, OLD.CUSTOMER_CODE, OLD.PRODUCT_CODE, OLD.RETAIL_PRICE, OLD.CRE_FUNC, OLD.CRE_DATETM, OLD.CRE_USER, OLD.UPD_FUNC, OLD.UPD_DATETM, OLD.UPD_USER, OLD.DEL_FUNC, OLD.DEL_DATETM, OLD.DEL_USER);
END IF;

END//

DELIMITER ;
CREATE INDEX CUSTOMER_PRODUCT_CODE ON CUSTOMER_RETAIL_PRICE_XXXXX(CUSTOMER_RETAIL_PRICE_ID);
CREATE INDEX CUSTOMER_PRODUCT_CODE1 ON CUSTOMER_RETAIL_PRICE_XXXXX(APPLY_DATE,CUSTOMER_CODE,PRODUCT_CODE);